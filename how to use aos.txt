AOS (animation on screen)

Set animation using data-aos attribute:
  <div data-aos="fade-in"></div>
 

Example:
And adjust behaviour by using data-aos-* attributes:
 <div
    data-aos="fade-up"
    data-aos-offset="200"
    data-aos-delay="50"
    data-aos-duration="1000"
    data-aos-easing="ease-in-out"
    data-aos-mirror="true"
    data-aos-once="false"
    data-aos-anchor-placement="top-center">
  </div>


Anchor
There is also a setting that can be used only on per-element basis:
data-aos-anchor - element whose offset will be used to trigger animation instead of an actual one.
Examples:
<div data-aos="fade-up" data-aos-anchor=".other-element"></div>


JS Events
AOS dispatches two events on document: aos:in and aos:out whenever any element animates in or out, so that you can do extra stuff in JS:

document.addEventListener('aos:in', ({ detail }) => {
  console.log('animated in', detail);
});
document.addEventListener('aos:out', ({ detail }) => {
  console.log('animated out', detail);
});


You can also tell AOS to trigger custom event on specific element, by setting data-aos-id attribute:
<div data-aos="fade-in" data-aos-id="super-duper"></div>
Then you'll be able to listen for two custom events then:

- aos:in:super-duper
- aos:out:super-duper


Recipes:
Adding custom animations:
Sometimes built-in animations are just not enough. Let's say you need one box to have different animation depending on resolution. Here's how you could do it:

[data-aos="new-animation"] {
  opacity: 0;
  transition-property: transform, opacity;

  &.aos-animate {
    opacity: 1;
  }

  @media screen and (min-width: 768px) {
    transform: translateX(100px);

    &.aos-animate {
      transform: translateX(0);
    }
  }
}

Then use it in HTML:
<div data-aos="new-animation"></div>
The element will only animate opacity on mobile devices, but from 768px width it'll also slide from right to left.


Adding custom easing:
Similar to animations you can add custom easings:

[data-aos] {
  body[data-aos-easing="new-easing"] &,
  &[data-aos][data-aos-easing="new-easing"] {
    transition-timing-function: cubic-bezier(.250, .250, .750, .750);
  }
}


